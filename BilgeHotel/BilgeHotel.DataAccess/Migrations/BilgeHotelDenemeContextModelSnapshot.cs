// <auto-generated />
using System;
using BilgeHotel.DataAccess.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BilgeHotel.DataAccess.Migrations
{
    [DbContext(typeof(BilgeHotelDenemeContext))]
    partial class BilgeHotelDenemeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.ReservationDetail", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("money");

                    b.HasKey("ReservationId", "PackageId", "RoomId");

                    b.HasIndex("CardId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("ReservationDetails");

                    b.HasData(
                        new
                        {
                            ReservationId = new Guid("1c638add-b777-4ff8-9cf1-6fff1a6763a7"),
                            PackageId = 1,
                            RoomId = 101,
                            CardId = new Guid("af7e1bb6-c335-4206-90c0-d34589a1ed8f"),
                            CheckInDate = new DateTime(2022, 4, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2022, 4, 6, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2022, 2, 25, 0, 32, 10, 677, DateTimeKind.Local).AddTicks(4291),
                            Discount = 22.0,
                            DiscountedPrice = 150m
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.ReservationOutHotelExtra", b =>
                {
                    b.Property<int>("HotelExtraId")
                        .HasColumnType("int");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("HotelExtraId", "ReservationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationOutHotelExtras");
                });

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.RoomBed", b =>
                {
                    b.Property<int>("BedId")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BedId", "RoomTypeId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomBeds");

                    b.HasData(
                        new
                        {
                            BedId = 1,
                            RoomTypeId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            BedId = 2,
                            RoomTypeId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            BedId = 1,
                            RoomTypeId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            BedId = 2,
                            RoomTypeId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            BedId = 1,
                            RoomTypeId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            BedId = 2,
                            RoomTypeId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            BedId = 1,
                            RoomTypeId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            BedId = 2,
                            RoomTypeId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            BedId = 1,
                            RoomTypeId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            BedId = 2,
                            RoomTypeId = 8,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.RoomTypeExtra", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.HasKey("RoomTypeId", "ExtraId");

                    b.HasIndex("ExtraId");

                    b.ToTable("RoomTypeExtra");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 1,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 1,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 1,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 2,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 2,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 2,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 2,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 3,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 3,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 3,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 3,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 3,
                            ExtraId = 5
                        },
                        new
                        {
                            RoomTypeId = 4,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 4,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 4,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 4,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 4,
                            ExtraId = 5
                        },
                        new
                        {
                            RoomTypeId = 5,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 5,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 5,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 5,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 5,
                            ExtraId = 5
                        },
                        new
                        {
                            RoomTypeId = 6,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 6,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 6,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 6,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 6,
                            ExtraId = 5
                        },
                        new
                        {
                            RoomTypeId = 7,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 7,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 7,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 7,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 7,
                            ExtraId = 5
                        },
                        new
                        {
                            RoomTypeId = 8,
                            ExtraId = 1
                        },
                        new
                        {
                            RoomTypeId = 8,
                            ExtraId = 2
                        },
                        new
                        {
                            RoomTypeId = 8,
                            ExtraId = 3
                        },
                        new
                        {
                            RoomTypeId = 8,
                            ExtraId = 4
                        },
                        new
                        {
                            RoomTypeId = 8,
                            ExtraId = 5
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BedType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Beds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BedType = "Tek Kişilik"
                        },
                        new
                        {
                            Id = 2,
                            BedType = "Double"
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cv2")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af7e1bb6-c335-4206-90c0-d34589a1ed8f"),
                            CardNumber = "selam",
                            CardType = "Ziraat",
                            Cv2 = "ABC",
                            EndDate = "02/05"
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength(true);

                    b.Property<string>("TcIdentityNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "serkana607@gmail.com",
                            FirstName = "Serkan",
                            LastName = "Şahin",
                            Phone = "25365485652",
                            TcIdentityNo = "64657172255"
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength(true);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExtraName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExtraName = "Klima"
                        },
                        new
                        {
                            Id = 2,
                            ExtraName = "Televizyon"
                        },
                        new
                        {
                            Id = 3,
                            ExtraName = "Saç Kurutma Makinesi"
                        },
                        new
                        {
                            Id = 4,
                            ExtraName = "Kablosuz İnternet"
                        },
                        new
                        {
                            Id = 5,
                            ExtraName = "Minibar"
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.HotelExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExtraName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("HotelExtras");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Path = "ABC.jpg",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Path = "ABC.jpg",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Path = "ABC.jpg",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Path = "ABC.jpg",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 8,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 9,
                            Path = "ABC.jpg",
                            RoomTypeId = 5
                        },
                        new
                        {
                            Id = 10,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 5
                        },
                        new
                        {
                            Id = 11,
                            Path = "ABC.jpg",
                            RoomTypeId = 6
                        },
                        new
                        {
                            Id = 12,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 6
                        },
                        new
                        {
                            Id = 13,
                            Path = "ABC.jpg",
                            RoomTypeId = 7
                        },
                        new
                        {
                            Id = 14,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 7
                        },
                        new
                        {
                            Id = 15,
                            Path = "ABC.jpg",
                            RoomTypeId = 8
                        },
                        new
                        {
                            Id = 16,
                            Path = "resepsiyon.jpg",
                            RoomTypeId = 8
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PackageName = "Tam Pansiyon",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            PackageName = "Herşey Dahil",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExtraTotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c638add-b777-4ff8-9cf1-6fff1a6763a7"),
                            CustomerId = 1
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Room", b =>
                {
                    b.Property<int>("RoomName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoomSituationId")
                        .HasColumnType("int");

                    b.Property<short>("RoomSize")
                        .HasColumnType("smallint");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomViewId")
                        .HasColumnType("int");

                    b.HasKey("RoomName");

                    b.HasIndex("RoomSituationId");

                    b.HasIndex("RoomTypeId");

                    b.HasIndex("RoomViewId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomName = 100,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 101,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 102,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 103,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 104,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 105,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 106,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 107,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 108,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 109,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 1,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 200,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 201,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 202,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 203,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 204,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 205,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 206,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 207,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 208,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 209,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 2,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 210,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 211,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 212,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 213,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 214,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 215,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 216,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 217,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 218,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 219,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 3,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 300,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 301,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 302,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 303,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 304,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 305,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 306,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 307,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 308,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 309,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 400,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 401,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 402,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 403,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 404,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 405,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 406,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 407,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 408,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 409,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 4,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 110,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 111,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 112,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 113,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 114,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 115,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 116,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 117,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 118,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 119,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 5,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 310,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 311,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 312,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 313,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 314,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 315,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 316,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 317,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 318,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 319,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 6,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 410,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 7,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 411,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 7,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 412,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 7,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 413,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 7,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 414,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 7,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 415,
                            RoomSituationId = 1,
                            RoomSize = (short)50,
                            RoomTypeId = 7,
                            RoomViewId = 1
                        },
                        new
                        {
                            RoomName = 420,
                            RoomSituationId = 1,
                            RoomSize = (short)750,
                            RoomTypeId = 8,
                            RoomViewId = 1
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.RoomSituation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomSituations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Hazır"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Meşgul"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Bakımda"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Hazırlanıyor"
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bekar Odası TekYat",
                            Price = 100m,
                            RoomTypeName = "Tek Kişilik"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bekar Odası DoubleYat",
                            Price = 100m,
                            RoomTypeName = "Tek Kişilik"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Çift Odası AyrıYat",
                            Price = 200m,
                            RoomTypeName = "İki Kişilik"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Çift Odası ÇiftYat",
                            Price = 150m,
                            RoomTypeName = "İki Kişilik"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Aile Odası AyrıYat",
                            Price = 200m,
                            RoomTypeName = "Üç Kişilik"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Aile Odası Çift Yanyana Cocuk AyrıYat",
                            Price = 350m,
                            RoomTypeName = "Üç Kişilik"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sülale Odası Sülalecek Yat",
                            Price = 750m,
                            RoomTypeName = "Dört Kişilik"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kral Dairesi DoubleYat",
                            Price = 1000m,
                            RoomTypeName = "Kral Dairesi"
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.RoomView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ViewName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RoomViews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ViewName = "Deniz"
                        },
                        new
                        {
                            Id = 2,
                            ViewName = "Duvar"
                        });
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<short?>("ExtraShift")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartShift")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StopShift")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.ReservationDetail", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.Card", "Card")
                        .WithMany("ReservationDetails")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.Package", "Package")
                        .WithMany("ReservationDetails")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.Reservation", "Reservation")
                        .WithMany("ReservationDetails")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.Room", "Room")
                        .WithMany("ReservationDetails")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Package");

                    b.Navigation("Reservation");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.ReservationOutHotelExtra", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.HotelExtra", "HotelExtra")
                        .WithMany("ReservationOutHotelExtras")
                        .HasForeignKey("HotelExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.Reservation", "Reservation")
                        .WithMany("ReservationOutHotelExtras")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelExtra");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.RoomBed", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.Bed", "Bed")
                        .WithMany("RoomBeds")
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomBeds")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bed");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("BilgeHotel.Entities.ComplexType.RoomTypeExtra", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.Extra", "Extra")
                        .WithMany("RoomTypeExtras")
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.RoomType", "RoomType")
                        .WithMany("RoomTypeExtras")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extra");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Employee", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Image", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Images")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Reservation", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.Employee", "Employee")
                        .WithMany("Reservations")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Room", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.RoomSituation", "RoomSituation")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomSituationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeHotel.Entities.Concrete.RoomView", "RoomView")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomViewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomSituation");

                    b.Navigation("RoomType");

                    b.Navigation("RoomView");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Shift", b =>
                {
                    b.HasOne("BilgeHotel.Entities.Concrete.Employee", "Employee")
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Bed", b =>
                {
                    b.Navigation("RoomBeds");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Card", b =>
                {
                    b.Navigation("ReservationDetails");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Employee", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Extra", b =>
                {
                    b.Navigation("RoomTypeExtras");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.HotelExtra", b =>
                {
                    b.Navigation("ReservationOutHotelExtras");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Package", b =>
                {
                    b.Navigation("ReservationDetails");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Reservation", b =>
                {
                    b.Navigation("ReservationDetails");

                    b.Navigation("ReservationOutHotelExtras");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.Room", b =>
                {
                    b.Navigation("ReservationDetails");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.RoomSituation", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.RoomType", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("RoomBeds");

                    b.Navigation("Rooms");

                    b.Navigation("RoomTypeExtras");
                });

            modelBuilder.Entity("BilgeHotel.Entities.Concrete.RoomView", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
